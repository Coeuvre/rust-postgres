initSidebarItems({"type":[["Result","A type alias of the result returned by many methods."]],"macro":[["accepts!","Generates a simple implementation of `ToSql::accepts` which accepts the types passed to it."],["to_sql_checked!","Generates an implementation of `ToSql::to_sql_checked`."]],"trait":[["GenericConnection","A trait allowing abstraction over connections and transactions"],["HandleNotice","Trait for types that can handle Postgres notice messages"],["IntoConnectParams","A trait implemented by types that can be converted into a `ConnectParams`."]],"mod":[["error","Error types."],["io","Types and traits for SSL adaptors."],["rows","Query result rows."],["types","Traits dealing with Postgres data types"]],"fn":[["cancel_query","Attempts to cancel an in-progress query."]],"enum":[["ConnectTarget","Specifies the target server to connect to."],["IsolationLevel","An enumeration of transaction isolation levels."],["SslMode","Specifies the SSL support requested for a new connection."]],"struct":[["CancelData","Contains information necessary to cancel queries for a session."],["Column","Information about a column of the result of a query."],["ConnectParams","Information necessary to open a new connection to a Postgres server."],["Connection","A connection to a Postgres database."],["LoggingNoticeHandler","A notice handler which logs at the `info` level."],["Notification","An asynchronous notification."],["Notifications","An iterator over asynchronous notifications."],["Statement","A prepared statement."],["Transaction","Represents a transaction on a database connection."],["UserInfo","Authentication information."]]});